generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  name         String
  password     String
  phone        String?
  avatar       String?
  Address      Address  @relation(fields: [addressId], references: [id])
  addressId    String   @unique
  refreshToken String?  @unique
  pets         Pet[]
  enabled      Boolean
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Pet {
  id         String   @id @default(uuid())
  username   String   @unique
  name       String
  birthdate  DateTime
  avatar     String?
  Category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  Breed      Breed    @relation(fields: [breedId], references: [id])
  breedId    String
  Guardian   User     @relation(fields: [guardianId], references: [id])
  guardianId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Category {
  id        String   @id @default(uuid())
  name      String
  about     String
  pets      Pet[]
  breeds    Breed[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Breed {
  id         String   @id @default(uuid())
  name       String
  about      String
  Category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  pets       Pet[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Address {
  id      String   @id @default(uuid())
  zipcode String?
  street  String?
  number  String?
  city    String?
  state   String?
  country String
  User    User?
  Company Company?
}

model Company {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  phone     String?
  photo     String?
  Address   Address  @relation(fields: [addressId], references: [id])
  addressId String   @unique
  enabled   Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id        String   @id @default(uuid())
  name      String
  about     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id        String   @id @default(uuid())
  name      String
  about     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
